name: Build

on: 
  pull_request:

env:
  CTEST_OUTPUT_ON_FAILURE: true

permissions:
  contents: write

jobs:
    fsw:
      runs-on: ubuntu-latest
      container:
        image: ivvitc/nos3-64:20250124
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 1
            submodules: recursive
        - name: config
          run: make config  
        - name: build
          run: make build-test
        - name: test
          run: make test-fsw

    sim:
      runs-on: ubuntu-latest
      container:
        image: ivvitc/nos3-64:20250124
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 1
            submodules: recursive
        - name: config
          run: make config  
        - name: build
          run: make build-sim

    coverage:
      runs-on: ubuntu-latest
      container:
        image: ivvitc/nos3-64:20250124
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  
            submodules: recursive
        - name: Configure Safe Directory
          run: git config --global --add safe.directory $GITHUB_WORKSPACE
        - name: Update
          run: apt-get update
        - name: install dependencies
          run: apt-get install -y gcc lcov gcovr bc
        - name: config
          run: make config
        - name: build coverage docs
          run: |
            export CFLAGS="-fprofile-arcs -ftest-coverage -g"
            make build-test
            make gcov
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            verbose: true
            recurse_submodules: true
        - name: Archive Coverage Directory
          uses: actions/upload-artifact@v4
          with:
            name: coverage-artifacts
            path: docs/coverage
    
    linter:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: recursive
        - name: Generate Included Files List 
          id: filelist
          shell: bash
          run: |
            FILES=$(find components \
              -type f \( -name '*.c' -o -name '*.h' \) \
              -not -path "components/syn/*" \
              -not -path "components/onair/*")
            FILES_ESCAPED=$(echo "$FILES" | paste -sd' ' -)
            echo "files=$FILES_ESCAPED" >> $GITHUB_OUTPUT

        - name: Clang Format
          uses: DoozyX/clang-format-lint-action@v0.15
          with:
            files: ${{ steps.filelist.outputs.files}}
            clangFormatVersion: 14
            style: file
            inplace: false #Change to True when satisfied



    
